@page "/asset/handover-invoice/create"
@page "/asset/handover-invoice/update/{Id:long}"

@inject ToastMessageHelper toastMessageHelper
@inject NavigationManager navigationManager
@inject IHttpClientService httpClientService

<HRMPanel Title="@pageTitle">
    <PanelContent>
        @if (pageLoading == true)
        {
            <HrmLoadingContainer />
        }
        <EditForm EditContext="@editContext">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-md-3 col-sm-6 col-xs-12">
                    <div class="mb-3">
                        <label>Số phiếu</label>
                        <InputText @bind-Value="model.Code" class="form-control" maxlength="20" placeholder="Số phiếu" tabindex="1" />
                        <ValidationMessage For="@(() => model.Code)" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-6 col-xs-12">
                    <div class="mb-3">
                        <label>Người giao</label>
                        <InputSelect @bind-Value="@model.HandoverBy" class="form-control" tabindex="2">
                            <option>Chọn</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => model.HandoverBy)" />
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-xs-12">
                    <div class="mb-3">
                        <label>Ngày bàn giao</label>
                        <InputDate @bind-Value="@model.HandoverDate" maxlength="10" class="form-control" tabindex="3" />
                        <ValidationMessage For="@(() => model.HandoverDate)" />
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-xs-12">
                    <div class="mb-3">
                        <label>Người nhận</label>
                        <InputSelect @bind-Value="@model.ReceiveBy" class="form-control" tabindex="4">
                            <option>Chọn</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => model.ReceiveBy)" />
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-xs-12">
                    <div class="mb-3">
                        <label>Ngày nhận</label>
                        <InputDate @bind-Value="@model.ReceiveDate" maxlength="10" class="form-control" tabindex="5" />
                        <ValidationMessage For="@(() => model.ReceiveDate)" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <label>Ghi chú</label>
                        <InputTextArea @bind-Value="@model.Notes" class="form-control" row="5" tabindex="6"></InputTextArea>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-10 col-sm-9 col-xs-12">
                    <h4>Chi tiết tài sản</h4>
                </div>
                <div class="col-md-2 col-sm-3 col-xs-12 text-right">
                    <HrmButton Color="@Constant.Enums.Color.Primary" Text="Thêm tài sản" />
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <HrmTable Column="3">
                        <Header>
                            <HrmTableTr>
                                <HrmTableTh Text="Tên tài sản" style="width: 200px;" />
                                <HrmTableTh Text="Ghi chú" />
                                <HrmTableTh Text="" style="width: 100px;" />
                            </HrmTableTr>
                        </Header>
                        <Body>
                            @{
                                if (model.Details == null || model.Details.Count == 0)
                                {
                                    <HrmTableNoData Column="3" />
                                }
                                else
                                {
                                    foreach (var item in model.Details)
                                    {
                                        <HrmTableTr>
                                            <HrmTableTd>
                                                <InputSelect @bind-Value="@item.AssetId" class="form-control" tabindex="1">
                                                    <option>Chọn</option>
                                                </InputSelect>
                                                <ValidationMessage For="@(() => item.AssetId)" />
                                            </HrmTableTd>
                                            <HrmTableTd>
                                                <InputText @bind-Value="@item.Notes" class="form-control" maxlength="500" placeholder="Ghi chú" tabindex="2" />
                                                <ValidationMessage For="@(() => model.Code)" />
                                            </HrmTableTd>
                                            <HrmTableTd>
                                                <HrmButton Text="X" Color="@Color.Error" />
                                            </HrmTableTd>
                                        </HrmTableTr>
                                    }
                                }
                            }
                        </Body>
                    </HrmTable>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12 mb-3">
                    <HrmButton Type="Submit" Text="Lưu" Color="@Constant.Enums.Color.Primary" OnClick="@OnValidSubmit" tabindex="7" />
                    <HrmButton Text="Danh sách" Color="@Constant.Enums.Color.Default" OnClick="BackToTheList" tabindex="8" />
                </div>
            </div>
        </EditForm>
    </PanelContent>
</HRMPanel>

@code {

    [CascadingParameter(Name = "Bredcrumb")]
    public List<BreadcurmbModel> Breadcrumb { get; set; } = new List<BreadcurmbModel>();

    [Parameter]
    public long? Id { get; set; }

    private AssetHandoverInvoiceModel model = new AssetHandoverInvoiceModel();

    private EditContext editContext;

    private string pageTitle = "Thêm mới";

    private bool pageLoading = true;

    protected override async Task OnInitializedAsync()
    {
        Breadcrumb.Add(new BreadcurmbModel()
        {
            Title = "Quản lý tài sản",
            Href = "asset",
            IsActive = false,
        });

        Breadcrumb.Add(new BreadcurmbModel()
        {
            Title = "Phiếu bàn giao",
            Href = "asset/handover-invoice",
            IsActive = false,
        });

        editContext = new EditContext(model);
        if (Id.HasValue)
        {
            pageTitle = "Cập nhật";

            Breadcrumb.Add(new BreadcurmbModel()
            {
                Title = "Cập nhật",
                IsActive = true,
            });

            var result = await httpClientService.Get<AssetHandoverInvoiceModel, HttpDataResponseWrapper<AssetHandoverInvoiceModel>>($"asset-handover-invoice/{Id.Value}");

            if (result != null)
            {
                if (result.Succeeded == true)
                {
                    model = result.Data;
                    editContext = new EditContext(model);
                }
                else
                {
                    await toastMessageHelper.Error(result.Message);
                }
            }
        }
        else
        {
            Breadcrumb.Add(new BreadcurmbModel()
            {
                Title = "Thêm mới",
                IsActive = true,
            });
        }

        pageLoading = false;
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        editContext = new EditContext(model);
    }

    private void BackToTheList()
    {
        navigationManager.NavigateTo("asset/handover-invoice");
    }

    private async Task OnValidSubmit()
    {
        if (!editContext.Validate())
        {
            return;
        }

        pageLoading = true;

        if (Id.HasValue)
        {
            var response = await httpClientService.Put<AssetHandoverInvoiceModel, HttpActionResponseWrapper>($"asset-handover-invoice/{Id.Value}", model);
            if (response.Succeeded)
            {
                await toastMessageHelper.UpdateSuccess();
                BackToTheList();
            }
            else
            {
                await toastMessageHelper.UpdateError();
                pageLoading = false;
            }
        }
        else
        {
            var response = await httpClientService.Post<AssetHandoverInvoiceModel, HttpActionResponseWrapper>("asset-handover-invoice", model);
            if (response.Succeeded)
            {
                await toastMessageHelper.CreateSuccess();
                BackToTheList();
            }
            else
            {
                await toastMessageHelper.CreateError();
                pageLoading = false;
            }
        }
        StateHasChanged();
    }

}
