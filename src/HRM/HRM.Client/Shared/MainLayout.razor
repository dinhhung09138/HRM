@inherits LayoutComponentBase

@inject IJSRuntime jsRuntime 
@inject AuthenticationStateProvider authticationStateProvider
@inject NavigationManager navigationManager 

<div class="wrapper">
    <Header />
    <Sidebar />
    <div class="content-wrapper">
        <ol class="breadcrumb breadcrumb-new">
            <li><a href="#"><i class="pe-7s-home"></i> Home</a></li>
            <li><a href="#">Asset</a></li>
            <li class="active">Add Type</li>
        </ol>

        <div class="content">
            <div class="se-pre-con" style="display: none;"></div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    @Body
                </div>
            </div>
        </div>
    </div>
    <div id="toTop" class="btn back-top" style="display: block;">
        <span class="ti-arrow-up"></span>
    </div>
</div>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;

        if (!authState.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo($"/login?returnUrl={navigationManager.BaseUri}");
        }
        await jsRuntime.InitializeInactiveTimer(DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public async Task Logout()
    {
        var authState = await AuthenticationState;

        if (authState.User.Identity.IsAuthenticated)
        {
            await ((HrmAuthenticationStateProvider)authticationStateProvider).DoLogout();
            navigationManager.NavigateTo("/login");
        }
    }
}